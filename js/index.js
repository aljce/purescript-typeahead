// Generated by psc-bundle 0.8.5.0
var PS = {};
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    /* jshint bitwise: false */
    return n === (n | 0) ? n + ".0" : n.toString();
  };
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };                                                                           
  var unit = {};
  var top = function (dict) {
      return dict.top;
  }; 
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (dictApplicative) {
      return pure(dictApplicative);
  };
  var otherwise = true;
  var not = function (dict) {
      return dict.not;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (dictFunctor) {
      return map(dictFunctor);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (dictEq) {
      return eq(dictEq);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (dictBind) {
      return bind(dictBind);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (dictApply) {
      return apply(dictApply);
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var $less$greater = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                  return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                      return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
  exports["eqString"] = eqString;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (dictApply) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };               
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");
  var monoidArray = new Monoid(function () {
      return Prelude.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 27, column 1 - line 28, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var semigroupFirst = new Prelude.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });
  var runFirst = function (v) {
      return v;
  };
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["runFirst"] = runFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictBooleanAlgebra) {
      return new Prelude.Semigroup(function (v) {
          return function (v1) {
              return Prelude.disj(dictBooleanAlgebra)(v)(v1);
          };
      });
  };
  var runDisj = function (v) {
      return v;
  };
  var monoidDisj = function (dictBooleanAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictBooleanAlgebra);
      }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($161) {
                  return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($161));
              })(Prelude.pure(dictApplicative)(Prelude.unit));
          };
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Prelude.id(Prelude.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(v.acc)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($164) {
                  return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                      return Data_Monoid_Disj.Disj(p($165));
                  })($164));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["any"] = any;
  exports["intercalate"] = intercalate;
  exports["sequence_"] = sequence_;
  exports["traverse_"] = traverse_;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($4) {
                  return c2d(b2c(a2b($4)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  }; 
  var semigroupTuple = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return new Prelude.Semigroup(function (v) {
              return function (v1) {
                  return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), Prelude["<>"](dictSemigroup1)(v.value1)(v1.value1));
              };
          });
      };
  };
  var monoidTuple = function (dictMonoid) {
      return function (dictMonoid1) {
          return new Data_Monoid.Monoid(function () {
              return semigroupTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonoid1["__superclass_Prelude.Semigroup_0"]());
          }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
      };
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              return function (f) {
                  return Data_Maybe_First.runFirst(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                      var $145 = Prelude["=="](dictEq)(a)(v.value0);
                      if ($145) {
                          return new Data_Maybe.Just(v.value1);
                      };
                      if (!$145) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Data.Tuple line 174, column 58 - line 174, column 93: " + [ $145.constructor.name ]);
                  })(f));
              };
          };
      };
  };
  var functorTuple = new Prelude.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["lookup"] = lookup;
  exports["snd"] = snd;
  exports["fst"] = fst;
  exports["semigroupTuple"] = semigroupTuple;
  exports["monoidTuple"] = monoidTuple;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];        
  var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Prelude["<$>"](Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["second"] = second;
  exports["first"] = first;
  exports["strongFn"] = strongFn;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var IsString = function (fromString) {
      this.fromString = fromString;
  };                                                                
  var fromString = function (dict) {
      return dict.fromString;
  };
  exports["IsString"] = IsString;
  exports["fromString"] = fromString;
})(PS["CSS.String"] = PS["CSS.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var CSS_String = PS["CSS.String"];
  var Control_Alternative = PS["Control.Alternative"];        
  var Prefixed = (function () {
      function Prefixed(value0) {
          this.value0 = value0;
      };
      Prefixed.create = function (value0) {
          return new Prefixed(value0);
      };
      return Prefixed;
  })();
  var Plain = (function () {
      function Plain(value0) {
          this.value0 = value0;
      };
      Plain.create = function (value0) {
          return new Plain(value0);
      };
      return Plain;
  })();
  var Value = function (x) {
      return x;
  };
  var Key = function (x) {
      return x;
  };
  var Val = function (value) {
      this.value = value;
  };
  var value = function (dict) {
      return dict.value;
  };                                     
  var isStringPrefixed = new CSS_String.IsString(Plain.create);
  var isStringValue = new CSS_String.IsString(function ($37) {
      return Value(CSS_String.fromString(isStringPrefixed)($37));
  });
  var isStringKey = new CSS_String.IsString(function ($42) {
      return Key(CSS_String.fromString(isStringPrefixed)($42));
  });
  var cast = function (v) {
      return v;
  };
  exports["Value"] = Value;
  exports["Key"] = Key;
  exports["Prefixed"] = Prefixed;
  exports["Plain"] = Plain;
  exports["Val"] = Val;
  exports["value"] = value;
  exports["cast"] = cast;
  exports["isStringPrefixed"] = isStringPrefixed;
  exports["isStringKey"] = isStringKey;
  exports["isStringValue"] = isStringValue;
})(PS["CSS.Property"] = PS["CSS.Property"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Rgba = (function () {
      function Rgba(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Rgba.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Rgba(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Rgba;
  })();
  var Hsla = (function () {
      function Hsla(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Hsla.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Hsla(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Hsla;
  })();
  var Other = (function () {
      function Other(value0) {
          this.value0 = value0;
      };
      Other.create = function (value0) {
          return new Other(value0);
      };
      return Other;
  })();
  var valColor = new CSS_Property.Val(function (v) {
      if (v instanceof Rgba && v.value3 === 255) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("rgb(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showInt)(v.value0), Prelude.show(Prelude.showInt)(v.value1), Prelude.show(Prelude.showInt)(v.value2) ]) + ")")));
      };
      if (v instanceof Rgba) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("rgba(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showInt)(v.value0), Prelude.show(Prelude.showInt)(v.value1), Prelude.show(Prelude.showInt)(v.value2), Prelude.show(Prelude.showInt)(v.value3) ]) + ")")));
      };
      if (v instanceof Hsla && v.value3 === 1.0) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("hsl(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(v.value0), Prelude.show(Prelude.showNumber)(v.value1), Prelude.show(Prelude.showNumber)(v.value2) ]) + ")")));
      };
      if (v instanceof Hsla) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("hsla(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(v.value0), Prelude.show(Prelude.showNumber)(v.value1), Prelude.show(Prelude.showNumber)(v.value2), Prelude.show(Prelude.showNumber)(v.value3) ]) + ")")));
      };
      if (v instanceof Other) {
          return v.value0;
      };
      throw new Error("Failed pattern match at CSS.Color line 18, column 3 - line 19, column 3: " + [ v.constructor.name ]);
  });                    
  var rgb = function (r) {
      return function (g) {
          return function (b) {
              return new Rgba(r, g, b, 255);
          };
      };
  };                             
  var white = rgb(255)(255)(255);
  exports["Rgba"] = Rgba;
  exports["Hsla"] = Hsla;
  exports["Other"] = Other;
  exports["white"] = white;
  exports["rgb"] = rgb;
  exports["valColor"] = valColor;
})(PS["CSS.Color"] = PS["CSS.Color"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];        
  var MonadWriter = function (__superclass_Prelude$dotMonad_0, listen, pass, writer) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.listen = listen;
      this.pass = pass;
      this.writer = writer;
  };
  var writer = function (dict) {
      return dict.writer;
  };
  var tell = function (dictMonoid) {
      return function (dictMonad) {
          return function (dictMonadWriter) {
              return function (w) {
                  return writer(dictMonadWriter)(new Data_Tuple.Tuple(Prelude.unit, w));
              };
          };
      };
  };
  var pass = function (dict) {
      return dict.pass;
  };
  var listen = function (dict) {
      return dict.listen;
  };
  exports["MonadWriter"] = MonadWriter;
  exports["tell"] = tell;
  exports["pass"] = pass;
  exports["listen"] = listen;
  exports["writer"] = writer;
})(PS["Control.Monad.Writer.Class"] = PS["Control.Monad.Writer.Class"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 29, column 1 - line 30, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];        
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.liftEff = liftEff;
  };                                 
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];        
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (v) {
      return v;
  };
  var mapWriterT = function (f) {
      return function (m) {
          return WriterT(f(runWriterT(m)));
      };
  };
  var functorWriterT = function (dictFunctor) {
      return new Prelude.Functor(function (f) {
          return mapWriterT(Prelude["<$>"](dictFunctor)(function (v) {
              return new Data_Tuple.Tuple(f(v.value0), v.value1);
          }));
      });
  };
  var applyWriterT = function (dictSemigroup) {
      return function (dictApply) {
          return new Prelude.Apply(function () {
              return functorWriterT(dictApply["__superclass_Prelude.Functor_0"]());
          }, function (f) {
              return function (v) {
                  return WriterT((function () {
                      var k = function (v1) {
                          return function (v2) {
                              return new Data_Tuple.Tuple(v1.value0(v2.value0), Prelude["<>"](dictSemigroup)(v1.value1)(v2.value1));
                          };
                      };
                      return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                  })());
              };
          });
      };
  };
  var bindWriterT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Prelude.Bind(function () {
              return applyWriterT(dictSemigroup)((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
          }, function (m) {
              return function (k) {
                  return WriterT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (v) {
                      return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runWriterT(k(v.value0)))(function (v1) {
                          return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, Prelude["<>"](dictSemigroup)(v.value1)(v1.value1)));
                      });
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (dictMonoid) {
      return function (dictApplicative) {
          return new Prelude.Applicative(function () {
              return applyWriterT(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictApplicative["__superclass_Prelude.Apply_0"]());
          }, function (a) {
              return WriterT(Prelude.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
          });
      };
  };
  var monadWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Prelude.Monad(function () {
              return applicativeWriterT(dictMonoid)(dictMonad["__superclass_Prelude.Applicative_0"]());
          }, function () {
              return bindWriterT(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonad);
          });
      };
  };
  var monadWriterWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad_Writer_Class.MonadWriter(function () {
              return monadWriterT(dictMonoid)(dictMonad);
          }, function (m) {
              return WriterT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (v) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, v.value1), v.value1));
              }));
          }, function (m) {
              return WriterT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (v) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v.value0.value0, v.value0.value1(v.value1)));
              }));
          }, function ($79) {
              return WriterT(Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())($79));
          });
      };
  };
  exports["WriterT"] = WriterT;
  exports["mapWriterT"] = mapWriterT;
  exports["runWriterT"] = runWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadWriterWriterT"] = monadWriterWriterT;
})(PS["Control.Monad.Writer.Trans"] = PS["Control.Monad.Writer.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (v) {
      return v;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];        
  var runWriter = function ($0) {
      return Data_Identity.runIdentity(Control_Monad_Writer_Trans.runWriterT($0));
  };
  var execWriter = function (m) {
      return Data_Tuple.snd(runWriter(m));
  };
  exports["execWriter"] = execWriter;
  exports["runWriter"] = runWriter;
})(PS["Control.Monad.Writer"] = PS["Control.Monad.Writer"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];        
  var fromJust = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 11, column 1 - line 12, column 1: " + [ v.constructor.name ]);
  };
  exports["fromJust"] = fromJust;
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];        
  var $colon = $foreign.cons;
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports["singleton"] = singleton;
  exports["filter"] = $foreign.filter;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var S = function (x) {
      return x;
  };
  var runS = function (v) {
      return Control_Monad_Writer.execWriter(v);
  };
  var rule = function ($15) {
      return S(Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Data_Array.singleton($15)));
  };
  var key = function (dictVal) {
      return function (k) {
          return function (v) {
              return rule(new Property(CSS_Property.cast(k), CSS_Property.value(dictVal)(v)));
          };
      };
  };
  var functorStyleM = new Prelude.Functor(function (f) {
      return function (v) {
          return S(Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v));
      };
  });
  var applyStyleM = new Prelude.Apply(function () {
      return functorStyleM;
  }, function (v) {
      return function (v1) {
          return S(Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Prelude.semigroupArray)(Data_Identity.applyIdentity))(v)(v1));
      };
  });
  var bindStyleM = new Prelude.Bind(function () {
      return applyStyleM;
  }, function (v) {
      return function (f) {
          return S(Prelude[">>="](Control_Monad_Writer_Trans.bindWriterT(Prelude.semigroupArray)(Data_Identity.monadIdentity))(v)(function ($19) {
              return (function (v1) {
                  return v1;
              })(f($19));
          }));
      };
  });
  exports["S"] = S;
  exports["Property"] = Property;
  exports["key"] = key;
  exports["rule"] = rule;
  exports["runS"] = runS;
  exports["functorStyleM"] = functorStyleM;
  exports["applyStyleM"] = applyStyleM;
  exports["bindStyleM"] = bindStyleM;
})(PS["CSS.Stylesheet"] = PS["CSS.Stylesheet"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];                                                                                       
  var backgroundColor = CSS_Stylesheet.key(CSS_Color.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("background-color"));
  exports["backgroundColor"] = backgroundColor;
})(PS["CSS.Background"] = PS["CSS.Background"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];        
  var Position = function (x) {
      return x;
  };
  var Display = function (x) {
      return x;
  };
  var valPosition = new CSS_Property.Val(function (v) {
      return v;
  });
  var valDisplay = new CSS_Property.Val(function (v) {
      return v;
  });                                                                             
  var relative = Position(CSS_String.fromString(CSS_Property.isStringValue)("relative"));
  var position = CSS_Stylesheet.key(valPosition)(CSS_String.fromString(CSS_Property.isStringKey)("position"));
  var inlineBlock = Display(CSS_String.fromString(CSS_Property.isStringValue)("inline-block"));
  var display = CSS_Stylesheet.key(valDisplay)(CSS_String.fromString(CSS_Property.isStringKey)("display"));
  var block = Display(CSS_String.fromString(CSS_Property.isStringValue)("block"));
  var absolute = Position(CSS_String.fromString(CSS_Property.isStringValue)("absolute"));
  exports["Display"] = Display;
  exports["Position"] = Position;
  exports["display"] = display;
  exports["inlineBlock"] = inlineBlock;
  exports["block"] = block;
  exports["relative"] = relative;
  exports["absolute"] = absolute;
  exports["position"] = position;
  exports["valPosition"] = valPosition;
  exports["valDisplay"] = valDisplay;
})(PS["CSS.Display"] = PS["CSS.Display"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];
  var FontWeight = function (x) {
      return x;
  }; 
  var valFontWeight = new CSS_Property.Val(function (v) {
      return v;
  });                                                                                    
  var fontWeight = CSS_Stylesheet.key(valFontWeight)(CSS_String.fromString(CSS_Property.isStringKey)("font-weight"));
  var bold = FontWeight(CSS_String.fromString(CSS_Property.isStringValue)("bold"));
  exports["FontWeight"] = FontWeight;
  exports["fontWeight"] = fontWeight;
  exports["bold"] = bold;
  exports["valFontWeight"] = valFontWeight;
})(PS["CSS.Font"] = PS["CSS.Font"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_These = PS["Data.These"];
  var Data_Tuple = PS["Data.Tuple"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];
  var collect$prime = function (v) {
      return function (v1) {
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Plain) {
              return [ new Data_Either.Right(new Data_Tuple.Tuple(v.value0, v1.value0)) ];
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Plain) {
              return Prelude["<$>"](Prelude.functorArray)(function (v3) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v3.value0 + v3.value1, v1.value0));
              })(v.value0);
          };
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Prefixed) {
              return Prelude["<$>"](Prelude.functorArray)(function (v2) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v.value0, v2.value0 + v2.value1));
              })(v1.value0);
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Prefixed) {
              return Prelude["<$>"](Prelude.functorArray)(function (v2) {
                  return Data_Maybe.maybe(new Data_Either.Left(v2.value0 + v2.value1))(function ($147) {
                      return Data_Either.Right.create(Data_Tuple.Tuple.create(v2.value0 + v2.value1)((function (v3) {
                          return v2.value0 + v3;
                      })($147)));
                  })(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)(v2.value0)(v1.value0));
              })(v.value0);
          };
          throw new Error("Failed pattern match at CSS.Render line 127, column 1 - line 128, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var collect = function (v) {
      return collect$prime(v.value0)(v.value1);
  };
  exports["collect"] = collect;
})(PS["CSS.Render"] = PS["CSS.Render"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._setTimeout = function (nonCanceler, millis, aff) {
    var set = setTimeout, clear = clearTimeout;
    if (millis <= 0 && typeof setImmediate === "function") {
      set = setImmediate;
      clear = clearImmediate;
    }
    return function(success, error) {
      var canceler;

      var timeout = set(function() {
        canceler = aff(success, error);
      }, millis);

      return function(e) {
        return function(s, f) {
          if (canceler !== undefined) {
            return canceler(e)(s, f);
          } else {
            clear(timeout);

            try {
              s(true);
            } catch (err) {
              f(err);
            }

            return nonCanceler;
          }
        };
      };
    };
  }

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      try {
        success(v);
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(f(v));
        } catch (err) {
          error(err);
        }
      }, error);
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                try {
                  s(true);
                } catch (err) {
                  f(err);
                }
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        try {
          successT(v)();
        } catch (err) {
          errorT(err)();
        }
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      try {
        success(e());
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  }
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  exports["runFn3"] = $foreign.runFn3;
  exports["runFn2"] = $foreign.runFn2;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var launchAff = function ($20) {
      return runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))($foreign._unsafeInterleaveAff($20));
  };
  var functorAff = new Prelude.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var applyAff = new Prelude.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Prelude["<$>"](functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Prelude.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
  var later$prime = function (n) {
      return function (aff) {
          return $foreign._setTimeout(nonCanceler, n, aff);
      };
  };
  var later = later$prime(0);                              
  var bindAff = new Prelude.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Prelude.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  exports["runAff"] = runAff;
  exports["nonCanceler"] = nonCanceler;
  exports["launchAff"] = launchAff;
  exports["later"] = later;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Cochoice = PS["Data.Profunctor.Cochoice"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var runForget = function (v) {
      return v;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($24) {
                  return v1(f($24));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($25) {
          return v(Data_Tuple.fst($25));
      };
  }, function (v) {
      return function ($26) {
          return v(Data_Tuple.snd($26));
      };
  });
  exports["runForget"] = runForget;
  exports["profunctorForget"] = profunctorForget;
  exports["strongForget"] = strongForget;
})(PS["Data.Lens.Internal.Forget"] = PS["Data.Lens.Internal.Forget"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Const = PS["Data.Const"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Types_2 = PS["Data.Lens.Types"];
  var Data_Lens_Types_2 = PS["Data.Lens.Types"];
  var Data_Lens_Types_2 = PS["Data.Lens.Types"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];        
  var view = function (l) {
      return Data_Lens_Internal_Forget.runForget(l(Prelude.id(Prelude.categoryFn)));
  };
  var $up$dot = function (s) {
      return function (l) {
          return view(l)(s);
      };
  };
  exports["view"] = view;
  exports["^."] = $up$dot;
})(PS["Data.Lens.Getter"] = PS["Data.Lens.Getter"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Internal_Shop = PS["Data.Lens.Internal.Shop"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS["Data.Lens.Lens"] = PS["Data.Lens.Lens"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Types_1 = PS["Data.Lens.Types"];
  var Data_Lens_Types_1 = PS["Data.Lens.Types"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];        
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Prelude["const"](b));
      };
  };
  var $dot$tilde = set;
  exports["set"] = set;
  exports["over"] = over;
  exports[".~"] = $dot$tilde;
})(PS["Data.Lens.Setter"] = PS["Data.Lens.Setter"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var $colon = Cons.create;
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  }; 
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      var __tco_acc = new Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 371, column 1 - line 379, column 1: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var functorList = new Prelude.Functor(function (f) {
      return function (lst) {
          var go = function (__copy_v) {
              return function (__copy_acc) {
                  var v = __copy_v;
                  var acc = __copy_acc;
                  tco: while (true) {
                      if (v instanceof Nil) {
                          return acc;
                      };
                      if (v instanceof Cons) {
                          var __tco_v = v.value1;
                          var __tco_acc = new Cons(f(v.value0), acc);
                          v = __tco_v;
                          acc = __tco_acc;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 758, column 3 - line 764, column 1: " + [ v.constructor.name, acc.constructor.name ]);
                  };
              };
          };
          return reverse(go(lst)(Nil.value));
      };
  });
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($374) {
                  return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($374));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 767, column 3 - line 771, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 765, column 3 - line 766, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["reverse"] = reverse;
  exports[":"] = $colon;
  exports["singleton"] = singleton;
  exports["fromFoldable"] = fromFoldable;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substr(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.toUpper = function (s) {
    return s.toUpperCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var $$null = function (s) {
      return $foreign.length(s) === 0;
  };
  exports["null"] = $$null;
  exports["joinWith"] = $foreign.joinWith;
  exports["toUpper"] = $foreign.toUpper;
  exports["toLower"] = $foreign.toLower;
  exports["split"] = $foreign.split;
  exports["drop"] = $foreign.drop;
  exports["take"] = $foreign.take;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports["regex'"] = function (s1) {
    return function (s2) {
      return new RegExp(s1, s2);
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];                                            
  var renderFlags = function (f) {
      return (function () {
          if (f.global) {
              return "g";
          };
          if (!f.global) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 65, column 4 - line 65, column 32: " + [ f.global.constructor.name ]);
      })() + ((function () {
          if (f.ignoreCase) {
              return "i";
          };
          if (!f.ignoreCase) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 66, column 4 - line 66, column 36: " + [ f.ignoreCase.constructor.name ]);
      })() + ((function () {
          if (f.multiline) {
              return "m";
          };
          if (!f.multiline) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 67, column 4 - line 67, column 35: " + [ f.multiline.constructor.name ]);
      })() + ((function () {
          if (f.sticky) {
              return "y";
          };
          if (!f.sticky) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 68, column 4 - line 68, column 32: " + [ f.sticky.constructor.name ]);
      })() + (function () {
          if (f.unicode) {
              return "u";
          };
          if (!f.unicode) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 69, column 4 - line 69, column 33: " + [ f.unicode.constructor.name ]);
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](s)(renderFlags(f));
      };
  };
  var noFlags = {
      global: false, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  };
  exports["noFlags"] = noFlags;
  exports["renderFlags"] = renderFlags;
  exports["regex"] = regex;
  exports["split"] = $foreign.split;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
    "use strict";

  // module Pux

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  function reactClass(htmlSignal) {
    return React.createClass({
      componentWillMount: function () {
        var ctx = this;
        htmlSignal.subscribe(function () {
          ctx.forceUpdate();
        });
      },
      render: function () {
        return htmlSignal.get()
      }
    });
  }

  exports.renderToDOM = function (selector) {
    var ReactDOM = (typeof require === 'function' && require('react-dom'))
                || (typeof window === 'object' && window.ReactDOM);
    return function (htmlSignal) {
      var elem = React.createElement(reactClass(htmlSignal));
      ReactDOM.render(elem, document.querySelector(selector))
      return function () {};
    };
  };

  exports.render = function (input, parentAction, html) {
    if (typeof html === 'string') {
      html = React.createElement('div', null, [html]);
    }

    function composeAction(parentAction, html) {
      var childAction = html.props && html.props.puxParentAction;
      var action = parentAction;
      if (childAction) {
        action = function (a) {
          return parentAction(childAction(a));
        };
      }
      return action;
    }

    function render(input, parentAction, html) {
      var props = html.props
      var newProps = {};

      for (var key in props) {
        if (key !== 'puxParentAction' && typeof props[key] === 'function') {
          newProps[key] = props[key](input, parentAction);
        }
      }

      var newChildren = React.Children.map(html.props.children, function (child) {
        if (typeof child === 'string') {
          return child;
        } else {
          return render(input, composeAction(parentAction, child), child);
        }
      });

      return React.cloneElement(html, newProps, newChildren);
    }

    return render(input, composeAction(parentAction, html), html);
  };
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {
    'use strict';                                          

  exports.append = function (html1, html2) {
    if (!Array.isArray(html1)) html1 = [html1];
    if (!Array.isArray(html2)) html2 = [html2];
    return html1.concat(html2);
  };
})(PS["Pux.Html"] = PS["Pux.Html"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Elements

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  exports.text = function (text) {
    return text;
  };

  exports.element = function (tagName, attrs, children) {
    if (Array.isArray(children[0])) children = children[0];

    var props = attrs.reduce(function (obj, attr) {
      var key = attr[0];
      var val = attr[1];
      obj[key] = val;
      return obj;
    }, {});

    return React.createElement.apply(React, [tagName, props].concat(children));
  };
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Pux.Html.Elements"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];                            
  var ul = Data_Function.runFn3($foreign.element)("ul");    
  var span = Data_Function.runFn3($foreign.element)("span");
  var li = Data_Function.runFn3($foreign.element)("li");  
  var input = Data_Function.runFn3($foreign.element)("input");
  var div = Data_Function.runFn3($foreign.element)("div");
  exports["ul"] = ul;
  exports["span"] = span;
  exports["li"] = li;
  exports["input"] = input;
  exports["div"] = div;
  exports["text"] = $foreign.text;
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Pux.Html"];
  var Data_Array = PS["Data.Array"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var Pux_Html_Elements_1 = PS["Pux.Html.Elements"];
  var Pux_Html_Elements_1 = PS["Pux.Html.Elements"];
  var withChild = function (f) {
      return function (html) {
          return f([  ])(Data_Array.singleton(html));
      };
  };
  var withAttr = function (f) {
      return function (attr) {
          return function (attrs) {
              return function (children) {
                  return f(Data_Array[":"](attr)(attrs))(children);
              };
          };
      };
  };
  var bind = function (x) {
      return function (f) {
          return $foreign.append(x, f(Prelude.unit));
      };
  };
  exports["withChild"] = withChild;
  exports["withAttr"] = withAttr;
  exports["bind"] = bind;
})(PS["Pux.Html"] = PS["Pux.Html"] || {});
(function(exports) {// module Signal

  function make(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  exports.constant = make;

  exports.mapSig = function(fun) {
    return function(sig) {
      var out = make(fun(sig.get()));
      sig.subscribe(function(val) { out.set(fun(val)); });
      return out;
    };
  };

  exports.merge = function(sig1) {
    return function(sig2) {
      var out = make(sig1.get());
      sig2.subscribe(out.set);
      sig1.subscribe(out.set);
      return out;
    };
  };

  exports.foldp = function(fun) {
    return function(seed) {
      return function(sig) {
        var acc = seed;
        var out = make(acc);
        sig.subscribe(function(val) {
          acc = fun(val)(acc);
          out.set(acc);
        });
        return out;
      };
    };
  };

  exports.runSignal =
    function runSignal(sig) {
      return function() {
        sig.subscribe(function(val) {
          val();
        });
        return {};
      };
    };
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Signal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];                        
  var mergeMany = function (dictFunctor) {
      return function (dictFoldable) {
          return function (sigs) {
              var mergeMaybe = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return v;
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return v1;
                      };
                      if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                      };
                      throw new Error("Failed pattern match at Signal line 52, column 9 - line 53, column 9: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Prelude["<$>"](dictFunctor)(Data_Maybe.Just.create)(sigs));
          };
      };
  };
  var functorSignal = new Prelude.Functor($foreign.mapSig);
  var flippedMap = function (dictFunctor) {
      return Prelude.flip(Prelude.map(dictFunctor));
  };
  exports["flippedMap"] = flippedMap;
  exports["mergeMany"] = mergeMany;
  exports["functorSignal"] = functorSignal;
  exports["runSignal"] = $foreign.runSignal;
  exports["foldp"] = $foreign.foldp;
  exports["constant"] = $foreign.constant;
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {// module Signal.Channel

  exports.channelP =
    function channelP(constant) {
      return function(v) {
        return function() {
          return constant(v);
        };
      };
    };

  exports.sendP =
    function sendP(chan, v) {
      return function(v) {
        return function() {
          chan.set(v);
        };
      };
    };

  exports.subscribe =
    function subscribe(chan) {
      return chan;
    };
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Signal.Channel"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];        
  var send = $foreign.sendP;
  var channel = $foreign.channelP(Signal.constant);
  exports["send"] = send;
  exports["channel"] = channel;
  exports["subscribe"] = $foreign.subscribe;
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Pux"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_List = PS["Data.List"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var React = PS["React"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var noEffects = function (state) {
      return {
          state: state, 
          effects: [  ]
      };
  };
  var start = function (config) {
      return function __do() {
          var v = Signal_Channel.channel(Data_List.Nil.value)();
          var mapAffect = function (affect) {
              return Control_Monad_Aff.launchAff(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.later(affect))(function (v1) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Signal_Channel.send(v)(Data_List.singleton(v1)));
              }));
          };
          var foldState = function (effModel) {
              return function (action) {
                  return config.update(action)(effModel.state);
              };
          };
          var foldActions = function (actions) {
              return function (effModel) {
                  return Data_Foldable.foldl(Data_List.foldableList)(foldState)(noEffects(effModel.state))(actions);
              };
          };
          var actionSignal = Signal_Channel.subscribe(v);
          var input = Data_Maybe_Unsafe.fromJust(Signal.mergeMany(Data_List.functorList)(Data_List.foldableList)(Data_List.reverse(Data_List[":"](actionSignal)(Prelude.map(Data_List.functorList)(Prelude.map(Signal.functorSignal)(Data_List.singleton))(Data_List.fromFoldable(Data_Foldable.foldableArray)(config.inputs))))));
          var effModelSignal = Signal.foldp(foldActions)(noEffects(config.initialState))(input);
          var effectsSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function ($6) {
              return Prelude.map(Prelude.functorArray)(mapAffect)((function (v1) {
                  return v1.effects;
              })($6));
          });
          var stateSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function (v1) {
              return v1.state;
          });
          var htmlSignal = Signal.flippedMap(Signal.functorSignal)(stateSignal)(function (state) {
              return $foreign.render(function ($7) {
                  return Signal_Channel.send(v)(Data_List.singleton($7));
              }, function (a) {
                  return a;
              }, config.view(state));
          });
          Signal.runSignal(Signal.flippedMap(Signal.functorSignal)(effectsSignal)(Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)))();
          return {
              html: htmlSignal, 
              state: stateSignal
          };
      };
  };
  exports["start"] = start;
  exports["noEffects"] = noEffects;
  exports["renderToDOM"] = $foreign.renderToDOM;
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Attributes

  exports.attr = function (key) {
    return function (val) {
      if (key === 'dangerouslySetInnerHTML') {
        val = { __html: val };
      } else if (key === 'style') {
        val = val.reduce(function (obj, tuple) {
          obj[tuple.value0] = tuple.value1;
          return obj;
        }, {});
      }
      return [key, val];
    };
  };
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Pux.Html.Attributes"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];       
  var value = $foreign.attr("value");
  var type_ = $foreign.attr("type");               
  var style = $foreign.attr("style");
  exports["value"] = value;
  exports["type_"] = type_;
  exports["style"] = style;
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Events

  exports.handler = function (key, action) {
    return [key, function (input, parentAction) {
      return function (ev) {
        if ((key === 'onSubmit')
        || (key === 'onClick' && ev.currentTarget.nodeName.toLowerCase() === 'a')) {
          ev.preventDefault();
        }
        input(parentAction(action(ev)))();
      };
    }];
  };
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Pux.Html.Events"];
  var Data_Function = PS["Data.Function"];
  var Pux_Html = PS["Pux.Html"];                                  
  var onChange = Data_Function.runFn2($foreign.handler)("onChange");
  exports["onChange"] = onChange;
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var CSS = PS["CSS"];
  var CSS_Overflow = PS["CSS.Overflow"];
  var CSS_TextAlign = PS["CSS.TextAlign"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_Render = PS["CSS.Render"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];        
  var camelCase = function (str) {
      var capitalize = function (word) {
          return Data_String.toUpper(Data_String.take(1)(word)) + Data_String.drop(1)(word);
      };
      var pascalCase = Data_String.joinWith("")(Prelude.map(Prelude.functorArray)(capitalize)(Data_String.split("-")(str)));
      return Data_String.toLower(Data_String.take(1)(pascalCase)) + Data_String.drop(1)(pascalCase);
  };
  var css = function (rules) {
      var tuples = function (array) {
          return function (v) {
              if (v instanceof CSS_Stylesheet.Property) {
                  return Prelude["++"](Prelude.semigroupArray)(CSS_Render.collect(new Data_Tuple.Tuple(v.value0, v.value1)))(array);
              };
              return array;
          };
      };
      var tuple = function (p) {
          return Data_Either.either(function (v) {
              return Data_Monoid.mempty(Data_Tuple.monoidTuple(Data_Monoid.monoidString)(Data_Monoid.monoidString));
          })(function (v) {
              return new Data_Tuple.Tuple(camelCase(v.value0), v.value1);
          })(p);
      };
      return Prelude.map(Prelude.functorArray)(tuple)(Data_Foldable.foldl(Data_Foldable.foldableArray)(tuples)([  ])(CSS_Stylesheet.runS(rules)));
  };
  var style = function (rules) {
      return Pux_Html_Attributes.style(css(rules));
  };
  exports["style"] = style;
  exports["css"] = css;
})(PS["Pux.CSS"] = PS["Pux.CSS"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];        
  var StateTA = (function () {
      function StateTA(value0) {
          this.value0 = value0;
      };
      StateTA.create = function (value0) {
          return new StateTA(value0);
      };
      return StateTA;
  })();
  var showOptions = function (dictStrong) {
      var setter = function (v) {
          return function (sOpts) {
              return new StateTA((function () {
                  var $17 = {};
                  for (var $18 in v.value0) {
                      if (v.value0.hasOwnProperty($18)) {
                          $17[$18] = v.value0[$18];
                      };
                  };
                  $17._showOptions = sOpts;
                  return $17;
              })());
          };
      };
      var getter = function (v) {
          return v.value0._showOptions;
      };
      return Data_Lens_Lens.lens(getter)(setter)(dictStrong);
  };
  var renderElem = function (dictStrong) {
      var setter = function (v) {
          return function (rElem) {
              return new StateTA((function () {
                  var $25 = {};
                  for (var $26 in v.value0) {
                      if (v.value0.hasOwnProperty($26)) {
                          $25[$26] = v.value0[$26];
                      };
                  };
                  $25._renderElem = rElem;
                  return $25;
              })());
          };
      };
      var getter = function (v) {
          return v.value0._renderElem;
      };
      return Data_Lens_Lens.lens(getter)(setter)(dictStrong);
  };
  var options = function (dictStrong) {
      var setter = function (v) {
          return function (opts) {
              return new StateTA((function () {
                  var $33 = {};
                  for (var $34 in v.value0) {
                      if (v.value0.hasOwnProperty($34)) {
                          $33[$34] = v.value0[$34];
                      };
                  };
                  $33._options = opts;
                  return $33;
              })());
          };
      };
      var getter = function (v) {
          return v.value0._options;
      };
      return Data_Lens_Lens.lens(getter)(setter)(dictStrong);
  };
  var element = function (dictStrong) {
      var setter = function (v) {
          return function (elem) {
              return new StateTA((function () {
                  var $41 = {};
                  for (var $42 in v.value0) {
                      if (v.value0.hasOwnProperty($42)) {
                          $41[$42] = v.value0[$42];
                      };
                  };
                  $41._element = elem;
                  return $41;
              })());
          };
      };
      var getter = function (v) {
          return v.value0._element;
      };
      return Data_Lens_Lens.lens(getter)(setter)(dictStrong);
  };
  var buildElem = function (dictStrong) {
      var setter = function (v) {
          return function (bElem) {
              return new StateTA((function () {
                  var $49 = {};
                  for (var $50 in v.value0) {
                      if (v.value0.hasOwnProperty($50)) {
                          $49[$50] = v.value0[$50];
                      };
                  };
                  $49._buildElem = bElem;
                  return $49;
              })());
          };
      };
      var getter = function (v) {
          return v.value0._buildElem;
      };
      return Data_Lens_Lens.lens(getter)(setter)(dictStrong);
  };
  exports["StateTA"] = StateTA;
  exports["options"] = options;
  exports["showOptions"] = showOptions;
  exports["renderElem"] = renderElem;
  exports["element"] = element;
  exports["buildElem"] = buildElem;
})(PS["TypeAhead.Types"] = PS["TypeAhead.Types"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Lens = PS["Data.Lens"];
  var Pux = PS["Pux"];
  var Pux_Html_Events = PS["Pux.Html.Events"];
  var TypeAhead_Types = PS["TypeAhead.Types"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];        
  var UpdateElement = function (x) {
      return x;
  };
  var simpleUpdateTA = function (v) {
      return function (state) {
          return Data_Lens_Setter[".~"](TypeAhead_Types.element(Data_Profunctor_Strong.strongFn))(Data_Lens_Getter.view(TypeAhead_Types.buildElem(Data_Lens_Internal_Forget.strongForget))(state)(v.target.value))(state);
      };
  };
  var updateTA = function (action) {
      return function ($3) {
          return Pux.noEffects(simpleUpdateTA(action)($3));
      };
  };
  exports["UpdateElement"] = UpdateElement;
  exports["updateTA"] = updateTA;
  exports["simpleUpdateTA"] = simpleUpdateTA;
})(PS["TypeAhead.Update"] = PS["TypeAhead.Update"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS = PS["CSS"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_Display = PS["CSS.Display"];
  var CSS_Background = PS["CSS.Background"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Font = PS["CSS.Font"];        
  var optionsStyle = Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Display.display(CSS_Display.block))(function () {
      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Display.position(CSS_Display.absolute))(function () {
          return CSS_Background.backgroundColor(CSS_Color.white);
      });
  });
  var inputStyle = Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Display.position(CSS_Display.relative))(function () {
      return CSS_Display.display(CSS_Display.inlineBlock);
  });
  var boldText = CSS_Font.fontWeight(CSS_Font.bold);
  exports["optionsStyle"] = optionsStyle;
  exports["inputStyle"] = inputStyle;
  exports["boldText"] = boldText;
})(PS["TypeAhead.Style"] = PS["TypeAhead.Style"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];
  var Pux_Html_Events = PS["Pux.Html.Events"];
  var Pux_CSS = PS["Pux.CSS"];
  var TypeAhead_Types = PS["TypeAhead.Types"];
  var TypeAhead_Update = PS["TypeAhead.Update"];
  var TypeAhead_Style = PS["TypeAhead.Style"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];
  var search = function (substr) {
      var toEither = function (str) {
          if (Data_String.toLower(substr) === Data_String.toLower(str)) {
              return new Data_Either.Right(substr);
          };
          if (Prelude.otherwise) {
              return new Data_Either.Left(str);
          };
          throw new Error("Failed pattern match at TypeAhead.States line 38, column 9 - line 39, column 9: " + [ str.constructor.name ]);
      };
      var flags = (function () {
          var $4 = {};
          for (var $5 in Data_String_Regex.noFlags) {
              if (Data_String_Regex.noFlags.hasOwnProperty($5)) {
                  $4[$5] = Data_String_Regex.noFlags[$5];
              };
          };
          $4.ignoreCase = true;
          return $4;
      })();
      var captured = "(" + (substr + ")");
      return function ($9) {
          return Prelude.map(Prelude.functorArray)(toEither)(Data_Array.filter(function ($10) {
              return !Data_String["null"]($10);
          })(Data_String_Regex.split(Data_String_Regex.regex(captured)(flags))($9)));
      };
  };
  var renderOptions = function (searchStr) {
      var bolden = function (v) {
          if (v instanceof Data_Either.Left) {
              return Pux_Html.withChild(Pux_Html_Elements.span)(Pux_Html_Elements.text(v.value0));
          };
          if (v instanceof Data_Either.Right) {
              return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.span)(Pux_CSS.style(TypeAhead_Style.boldText)))(Pux_Html_Elements.text(v.value0));
          };
          throw new Error("Failed pattern match at TypeAhead.States line 48, column 9 - line 49, column 9: " + [ v.constructor.name ]);
      };
      var toHtml = function (sections) {
          return Pux_Html_Elements.li([  ])(Prelude.map(Prelude.functorArray)(bolden)(sections));
      };
      return function ($11) {
          return Prelude.map(Prelude.functorArray)(toHtml)(Data_Array.filter(Data_Foldable.any(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(Data_Either.either(Prelude["const"](false))(Prelude["const"](true))))(Prelude.map(Prelude.functorArray)(search(searchStr))($11)));
      };
  };
  var inputBox = function (str) {
      return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html_Elements.input([ Pux_Html_Attributes.type_("text"), Pux_Html_Attributes.value(str), Pux_Html_Events.onChange(TypeAhead_Update.UpdateElement) ])([  ]));
  };
  var twitterTA = function (opts) {
      return new TypeAhead_Types.StateTA({
          _buildElem: Prelude.id(Prelude.categoryFn), 
          _element: "", 
          _renderElem: inputBox, 
          _showOptions: renderOptions, 
          _options: opts
      });
  };
  exports["twitterTA"] = twitterTA;
})(PS["TypeAhead.States"] = PS["TypeAhead.States"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_CSS = PS["Pux.CSS"];
  var TypeAhead_Types = PS["TypeAhead.Types"];
  var TypeAhead_Style = PS["TypeAhead.Style"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Monoid = PS["Data.Monoid"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];        
  var renderTA = function (dictFoldable) {
      return function (state) {
          var renderedOpts = Data_Lens_Getter["^."](state)(TypeAhead_Types.showOptions(Data_Lens_Internal_Forget.strongForget))(Data_Lens_Getter["^."](state)(TypeAhead_Types.element(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter["^."](state)(TypeAhead_Types.options(Data_Lens_Internal_Forget.strongForget)));
          var opts = Data_Foldable.foldMap(dictFoldable)(Data_Monoid.monoidArray)(Data_Array.singleton)(renderedOpts);
          return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html.bind(Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.div)(Pux_CSS.style(TypeAhead_Style.inputStyle)))(Pux_Html.bind(Data_Lens_Getter["^."](state)(TypeAhead_Types.renderElem(Data_Lens_Internal_Forget.strongForget))(Data_Lens_Getter["^."](state)(TypeAhead_Types.element(Data_Lens_Internal_Forget.strongForget))))(function () {
              var $1 = Data_Array["null"](opts);
              if ($1) {
                  return Pux_Html_Elements.span([  ])([  ]);
              };
              if (!$1) {
                  return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.div)(Pux_CSS.style(TypeAhead_Style.optionsStyle)))(Pux_Html_Elements.ul([  ])(Data_Foldable.foldMap(dictFoldable)(Data_Monoid.monoidArray)(Data_Array.singleton)(renderedOpts)));
              };
              throw new Error("Failed pattern match at TypeAhead.Render line 23, column 7 - line 27, column 5: " + [ $1.constructor.name ]);
          })))(function () {
              return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html_Elements.text("background"));
          }));
      };
  };
  exports["renderTA"] = renderTA;
})(PS["TypeAhead.Render"] = PS["TypeAhead.Render"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Pux = PS["Pux"];
  var TypeAhead_States = PS["TypeAhead.States"];
  var TypeAhead_Render = PS["TypeAhead.Render"];
  var TypeAhead_Update = PS["TypeAhead.Update"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];        
  var testOptions = [ "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District Of Columbia", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming" ];
  var main = function __do() {
      var v = Pux.start({
          initialState: TypeAhead_States.twitterTA(testOptions), 
          update: TypeAhead_Update.updateTA, 
          view: TypeAhead_Render.renderTA(Data_Foldable.foldableArray), 
          inputs: [  ]
      })();
      return Pux.renderToDOM("#app")(v.html)();
  };
  exports["main"] = main;
  exports["testOptions"] = testOptions;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
